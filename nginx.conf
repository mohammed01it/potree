user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  server {
  listen       80;
  server_name  dzhay.com;

    root /usr/share/nginx/html;
  # serve login page as the default index (kept for reference)
  index page/login/login.html index.html;

    # Enable CORS for pointcloud assets
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Quick response for OPTIONS preflight
    # Note: add_header is set in the server scope above so headers are returned
    if ($request_method = OPTIONS ) {
      return 204;
    }

    # Proxy API requests to the node API service running in compose (service name: api)
    location /api/ {
      proxy_pass http://api:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      # let the backend handle CORS for API responses; keep connection alive
      proxy_set_header Connection "";
    }

    # Redirect root exactly to the login page to avoid internal redirect loops
    location = / {
      return 302 /page/login/login.html;
    }

    location / {
      # serve files directly; return 404 if not found
      try_files $uri $uri/ =404;
    }

    # Serve pointcloud file types with CORS headers
    location ~* \.(las|laz|bin|pnts)$ {
      add_header 'Access-Control-Allow-Origin' '*';
      try_files $uri =404;
    }
  }
}
